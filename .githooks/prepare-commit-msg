#!/bin/bash

# With thanks to Sergio Vaccaro <sergio.vaccaro@istat.it>

set -e # using the options command to abort script at first error
echo
echo "PREPARE-COMMIT-MSG"

#prompt the user to enter commit summary
read -p "Enter Summary: " SUMMARY < /dev/tty

#prompt the user to enter why the changes were made
read -p "Why are you making these changes: " WHY < /dev/tty

#prompt the user to enter what changes were made
read -p "What changes were made: " WHAT < /dev/tty

COMMIT_MSG_FILE=$1

#added new message commit
echo -e "${SUMMARY}\n\n${WHY}\n${WHAT}" > "$COMMIT_MSG_FILE"

# Branch to protect
PROTECTED_BRANCH="master"

# Remote
REMOTE=""

# Check for merges
if [[ $2 != 'merge' ]]; then
    # Not a merge
    echo "  not a merge"
    exit 0
fi

# Current branch
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)

# Check if in PROTECTED_BRANCH
#if [[ "$CURRENT_BRANCH" != "$PROTECTED_BRANCH" ]]; then
#    # Not in PROTECTED_BRANCH: can proceed
#    echo "  not in the ${PROTECTED_BRANCH} branch"
#    exit 0
#fi

#echo "  you are trying to merge into the ${PROTECTED_BRANCH} branch"
#echo "  merging branches to master must be done by creating a pull request"
#echo "  this merge has been cancelled however you will need to"
#echo "  reset the operation before continuing by running git reset --merge"
#echo
#exit 1

